@page "/"

@using CryptoList.ViewModel
@using CryptoList.Components;
@using CryptoList.Models
@using CryptoList.Services
@using System.ComponentModel
@implements IDisposable;
@inject FavoritesViewModel FavoritesViewModel;

<PageTitle>Cryptomunten overzicht</PageTitle>

<h1 class="title max-w-4xl">Hieronder is een overzicht te zien van alle beschikbare cryptomunten, klik op het sterretje om er één als favoriet te markeren.</h1>

@foreach (var favorite in FavoritesViewModel.FavoriteCoins)
{
    <p>@(favorite)</p>
}

<div class="coin-grid mt-10">
    @foreach (var coin in Coins)
    {
        <CoinCard 
            Coin="coin" 
            OnFavoriteClick="ToggleFavorite"
        />
    }
</div>

@code {
    public List<Coin> Coins = new();
    protected override async Task OnInitializedAsync()
    {
        FetchCoinsService.UpdateEvent += async coins =>
        {
            await InvokeAsync(() =>
            {
                Coins = coins;
                StateHasChanged();
            });
        };

        FavoritesViewModel.PropertyChanged += OnPropertyChangedEventHandler;

        await base.OnInitializedAsync();
    }

    void ToggleFavorite(string id)
    {
        FavoritesViewModel.ToggleFavorite(id);
    }

    async void OnPropertyChangedEventHandler(object sender, PropertyChangedEventArgs e)
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        FavoritesViewModel.PropertyChanged -= OnPropertyChangedEventHandler!;
    }
}